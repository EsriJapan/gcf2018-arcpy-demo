"""  CSVファイルを読込み、フィーチャ クラスを作成するスクリプト  ※パス、ファイル名などは実行環境に合わせて修正してください。 """  import arcpy import os import datetime  # ワークスペースの設定 workPath = r"C:\WorkSpace\ArcPy" arcpy.env.workspace = workPath + r"\ArcGIS Pro\arcpy.gdb"  # 出力先フォルダの作成 date = datetime.datetime.now() dateStr = '{0:%Y%m%d}'.format(date) os.makedirs(workPath + r"\output\{0}".format(dateStr))  # ジオプロセシングツールの実行 csv_table = workPath + r"\current.csv" out_csv_feature_class = "csv{0}".format(dateStr) x_field = "X" y_field = "Y" current_csv_feature_class = "current" arcpy.XYTableToPoint_management(csv_table, out_csv_feature_class, x_field, y_field) arcpy.DeleteFeatures_management(current_csv_feature_class) arcpy.Append_management(out_csv_feature_class, current_csv_feature_class, "NO_TEST")
""" カーソルを使用して1レコードずつ集計を行う ※フィーチャクラス名、カラム名などは各自の環境に合わせて修正してください。 """  import arcpy  # カーソルを使用してフィーチャ クラスの各行 (フィーチャ) に対して繰り返し処理を行う cursor = arcpy.UpdateCursor("current") for row in cursor:     row.setValue("放置車両_合計",row.getValue("放置台数_自転車") + row.getValue("放置台数_原付") + row.getValue("放置台数_自二"))     cursor.updateRow(row) del cursor, row
""" マッピングモジュールを使用してマップをPDF出力する """  import arcpy import datetime  # ワークスペースの設定 workPath = r"C:\WorkSpace\ArcPy"  # 出力パスの設定 date = datetime.datetime.now() dateStr = '{0:%Y%m%d}'.format(date)  # PDFに出力するマップドキュメントの設定 project = arcpy.mp.ArcGISProject(workPath + r"\ArcGIS Pro\arcpy.aprx") layout = project.listLayouts()[0] layout.exportToPDF(workPath + r"\output\report.pdf") if layout.mapSeries is not None:     ms = layout.mapSeries     if ms.enabled:     	# データドリブンページで指定した図郭ごとに出力         for pageNum in range(1, ms.pageCount + 1):             ms.currentPageNumber = pageNum             print("{0}/{1}ページを出力中".format(str(ms.currentPageNumber), str(ms.pageCount)))             layout.exportToPDF(workPath + r"\output\{0}\report_{1}".format(dateStr, str(ms.currentPageNumber)) + ".pdf")
"""  CSVファイルを読込み、フィーチャ クラスを作成するスクリプト  ※パス、ファイル名などは実行環境に合わせて修正してください。 """  import arcpy import os import datetime  # ワークスペースの設定 workPath = r"C:\data" arcpy.env.workspace = workPath + r"\ArcGIS Pro\arcpy.gdb"  # 出力先フォルダの作成 date = datetime.datetime.now() dateStr = '{0:%Y%m%d}'.format(date) os.makedirs(workPath + r"\output\{0}".format(dateStr))  # ジオプロセシングツールの実行 csv_table = workPath + r"\current.csv" out_csv_feature_class = "csv{0}".format(dateStr) x_field = "X" y_field = "Y" current_csv_feature_class = "current" arcpy.XYTableToPoint_management(csv_table, out_csv_feature_class, x_field, y_field) arcpy.DeleteFeatures_management(current_csv_feature_class) arcpy.Append_management(out_csv_feature_class, current_csv_feature_class, "NO_TEST")   # カーソルを使用してフィーチャ クラスの各行 (フィーチャ) に対して繰り返し処理を行う cursor = arcpy.UpdateCursor("current") for row in cursor:     row.setValue("放置車両_合計",row.getValue("放置台数_自転車") + row.getValue("放置台数_原付") + row.getValue("放置台数_自二"))     cursor.updateRow(row) del cursor, row   # PDFに出力するマップドキュメントの設定 project = arcpy.mp.ArcGISProject(workPath + r"\ArcGIS Pro\arcpy.aprx") layout = project.listLayouts()[0] layout.exportToPDF(workPath + r"\output\report.pdf") if layout.mapSeries is not None:     ms = layout.mapSeries     if ms.enabled:     	# データドリブンページで指定した図郭ごとに出力         for pageNum in range(1, ms.pageCount + 1):             ms.currentPageNumber = pageNum             print("{0}/{1}ページを出力中".format(str(ms.currentPageNumber), str(ms.pageCount)))             layout.exportToPDF(workPath + r"\output\{0}\report_{1}".format(dateStr, str(ms.currentPageNumber)) + ".pdf")
